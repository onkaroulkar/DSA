# Graph
<br> Graph is a network of nodes.
<br> Edge- connect two nodes.
<br> Application - Maps, Social Network, Delivery Network.

#Sorting a graph
<br> Adjacency List.
<br> Adjacency Matrix.
<br> Edge List.
<br> 2D Matrix(Implicit Graph)

#Adjacency List
<br> multiple ways to create adjacency list like array of arrayList or hashMap.
<br> eg. 0 ----> (0,2) , 1--->(0,3)
<br> Adjacency list doses not use extra space.
<br> No extra space -- time optimised.

#Adjacency Matrix
<br> Use extra space.
<br> V = vertex.
<br> space complexity O(V^2)
<br> Time complexity O(V)

#Edge List
<br> Edges = {(0,2),(1,2),(1,3),(2,3)}
<br> Used in minimum spanning tree algorithm.

#Graph Traversal
<br> Breath first search(BFS) -- Go to immediate neighbour first.
<br> use Queue data structure for BFS.

<br> Depth first search(DFS)--- keep going to the first neighbour.

#Cyle Detection(Directed Graph)
<br>